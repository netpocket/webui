(function() {
  window.NetpocketRails = {
    Models: {},
    Collections: {},
    Views: {},
    Routers: {},
    initialize: function() {
      return console.log("NetpocketRails initialized");
    }
  };

  $(document).ready(function() {
    return NetpocketRails.initialize();
  });

}).call(this);

(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  NetpocketRails.Collections.Devices = (function(_super) {
    __extends(Devices, _super);

    function Devices() {
      return Devices.__super__.constructor.apply(this, arguments);
    }

    Devices.prototype.model = NetpocketRails.Models.Device;

    return Devices;

  })(Backbone.Collection);

}).call(this);

(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  NetpocketRails.Models.Device = (function(_super) {
    __extends(Device, _super);

    function Device() {
      return Device.__super__.constructor.apply(this, arguments);
    }

    Device.prototype.useFeature = function(name, callback) {
      var args;
      args = name.split(':');
      app.connection.socket.once("device:" + (this.get('id')), function(payload) {
        if (payload.cmd === "feature response" && _.isEqual(payload.args, args)) {
          return callback(payload.err, payload.res);
        }
      });
      return app.connection.emit("device:" + (this.get('id')), {
        listen: "once",
        cmd: 'feature request',
        args: args
      });
    };

    return Device;

  })(Backbone.Model);

}).call(this);

(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  NetpocketRails.Routers.Devices = (function(_super) {
    __extends(Devices, _super);

    function Devices() {
      return Devices.__super__.constructor.apply(this, arguments);
    }

    return Devices;

  })(Backbone.Router);

}).call(this);

(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  NetpocketRails.Views.Device = (function(_super) {
    __extends(Device, _super);

    function Device() {
      return Device.__super__.constructor.apply(this, arguments);
    }

    Device.prototype.events = {
      'click .feature .actions a': 'useFeature'
    };

    Device.prototype.template = JST['devices/device'];

    Device.prototype.className = "device";

    Device.prototype.initialize = function(device) {
      this.device = device;
      return this.listenTo(this.device, "change", this.render);
    };

    Device.prototype.render = function() {
      this.$el.html(this.template(this.device.attributes));
      return this;
    };

    Device.prototype.useFeature = function(e) {
      e.preventDefault();
      console.log("please wait! don't click that one again!");
      return this.device.useFeature($(e.target).data('name'), (function(_this) {
        return function(err, res) {
          return console.log("ok back!", err, res);
        };
      })(this));
    };

    return Device;

  })(Backbone.View);

}).call(this);

(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  NetpocketRails.Views.DevicesIndex = (function(_super) {
    __extends(DevicesIndex, _super);

    function DevicesIndex() {
      return DevicesIndex.__super__.constructor.apply(this, arguments);
    }

    DevicesIndex.prototype.initialize = function(collection) {
      this.collection = collection;
      this.listenTo(this.collection, "reset", this.render);
      this.listenTo(this.collection, "remove", this.removeDevice);
      return this.listenTo(this.collection, "add", this.renderDevice);
    };

    DevicesIndex.prototype.render = function() {
      this.$el.html('');
      this.collection.each((function(_this) {
        return function(device) {
          return _this.renderDevice(device);
        };
      })(this));
      return this;
    };

    DevicesIndex.prototype.renderDevice = function(device) {
      device.view = new NetpocketRails.Views.Device(device);
      return this.$el.append(device.view.render().el);
    };

    DevicesIndex.prototype.removeDevice = function(device) {
      return device.view.remove();
    };

    return DevicesIndex;

  })(Backbone.View);

}).call(this);
